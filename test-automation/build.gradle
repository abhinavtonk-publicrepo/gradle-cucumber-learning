/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // Cucumber Setting-1
    //with 'testImplementation' dependencies the code should be in src/test/java or else it wont detect imports
    //with 'implementation' dependencies the code should be in src/test/java OR src/main/java
    implementation 'io.cucumber:cucumber-java:7.9.0'
    implementation 'io.cucumber:cucumber-core:7.9.0'
    // Extent Reports
    implementation 'com.aventstack:extentreports:5.0.9'
    implementation 'tech.grasshopper:extentreports-cucumber7-adapter:1.9.2'

}


//Cucumber Setting-2
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

//Cucumber Setting-3
task cucumber() {
    dependsOn assemble, testClasses

    System.out.println("Root Project = " + rootProject.projectDir)
    System.out.println("Project = " + project.projectDir)
    System.out.println("System Property = "+ System.getProperty("env")); //gradle cucumber -Denv=qa
    System.out.println("configurations.cucumberRuntime = " + configurations.cucumberRuntime)
    System.out.println("sourceSets.main.output = " + sourceSets.main.output)
    System.out.println("sourceSets.test.output = " + sourceSets.test.output)

    String tags;
    String threads = 4;
    String htmlReportLocation = "${project.projectDir}/automation-execution-reports/CucumberReports/cucumber-report.html";
    String jsonReportLocation = "${project.projectDir}/automation-execution-reports/CucumberReports/cucumber-report.json";
//    String appEnv = System.getProperty("env");
//    buildEnvironment appEnv;
//    environment 'env' , System.getProperty("env")
//    systemProperty "env" , System.getProperty("env")


    if (project.hasProperty("tags")) {
        tags = project.tags;
    } else {
        tags = "@regression"
    }

//    doFirst {
//        environment 'env' , System.getProperty("env")
//    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    "src/test/resources/features",
                    "--glue", "step_defs",
                    "--tags", "${tags}",
                    "--threads", "${threads}",
                    "--plugin", "pretty",
                    "--monochrome",
                    "--plugin", "json:${jsonReportLocation}",
                    "--plugin", "html:${htmlReportLocation}",
                    "--plugin", "com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:"
                    ]
        }
    }
}

//Cucumber Setting-4
// Install Gherkin plugin in Gradle so that Feature files are color coded


//application {
//    // Define the main class for the application.
//    mainClass = 'gradlecucumberlearning.App'
//}

//tasks.named('test') {
//    // Use JUnit Platform for unit tests.
//    useJUnitPlatform()
//}
test{
//    String appEnv = System.getProperty("env")
    environment "env", System.getProperty("env")
//    systemProperties = System.properties
}
