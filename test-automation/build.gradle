/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // Cucumber Setting-1 (with 'testImplementation' dependencies the code should be in src/test/java or else it wont detect imports)
    testImplementation 'io.cucumber:cucumber-java:6.10.4'
}


//Cucumber Setting-2
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

//Cucumber Setting-3
task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--plugin', 'json:target/cucumber-report.json',
                    '--glue', 'step_defs',
                    '--threads', 4,
                    '--monochrome',
                    '--tags', "@test",
                    'src/test/resources/features']
        }
    }
}

//Cucumber Setting-4
// Install Gherkin plugin in Gradle so that Feature files are color coded


//application {
//    // Define the main class for the application.
//    mainClass = 'gradlecucumberlearning.App'
//}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
